// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  username    String
  email       String  @unique
  password    String
  displayName String
  avatarUrl   String?
  bio         String?
  channels Channel[]
  streams  Stream[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Channel {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  isLive      Boolean
  bannerUrl   String?
  logoUrl     String?

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  streams Stream[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("channels")
}

model Game {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  platform      String
  releaseDate   DateTime
  coverImageUrl String?
  genre         String?

  streams Stream[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("games")
}

model Stream {
  id           Int      @id @default(autoincrement())
  title        String
  thumbnailUrl String?
  isLive       Boolean?

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  channelId Int
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  gameId Int
  game   Game @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("streams")
}


