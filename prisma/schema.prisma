// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  Aluno
  Pai 
  Professor
}

enum ActivityType {
  Quiz
  MemoryGame
  Drag_and_Drop
}

enum DifficultyLevel {
  Easy
  Medium
  Hard
}

enum ProgressStatus {
  Not_Started
  In_Progress
  Completed
}

model User {
  id          Int     @id @default(autoincrement())
  username    String
  email       String  @unique
  password    String
  role        Role    @default(Aluno)
  bio         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  progress Progress[]

  @@map("users")
}


model Activity {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        ActivityType @default(Quiz)
  difficulty  DifficultyLevel @default(Easy)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  progress Progress[]

  @@map("activities")
}

model Progress {
  id          Int      @id @default(autoincrement())
  userId      Int
  activityId  Int
  status      ProgressStatus @default(Not_Started)
  score       Int?
  completedAt DateTime?

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  activity Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("progress")
}